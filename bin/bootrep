#!/bin/bash
# <=============================================================>
# @license LinuxShss
# bin/bootrep
#
# Copyright (c) 2024, TheWisker.
#
# This source code is licensed under the GNU license found in the
# LICENSE file in the root directory of this source tree.
# <=============================================================>

#   ██████╗  ██████╗  ██████╗ ████████╗██████╗ ███████╗██████╗ 
#   ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝██╔══██╗██╔════╝██╔══██╗
#   ██████╔╝██║   ██║██║   ██║   ██║   ██████╔╝█████╗  ██████╔╝
#   ██╔══██╗██║   ██║██║   ██║   ██║   ██╔══██╗██╔══╝  ██╔═══╝ 
#   ██████╔╝╚██████╔╝╚██████╔╝   ██║   ██║  ██║███████╗██║     
#   ╚═════╝  ╚═════╝  ╚═════╝    ╚═╝   ╚═╝  ╚═╝╚══════╝╚═╝     

# <=============================================================>
#                      @Author: TheWisker
# <=============================================================>
#        Script that returns a report about the last boot
# <=============================================================>
#  [Variables] Title & Separator & Colors:
# <=============================================================>
title="
  ██████╗  ██████╗  ██████╗ ████████╗██████╗ ███████╗██████╗ 
  ██╔══██╗██╔═══██╗██╔═══██╗╚══██╔══╝██╔══██╗██╔════╝██╔══██╗
  ██████╔╝██║   ██║██║   ██║   ██║   ██████╔╝█████╗  ██████╔╝
  ██╔══██╗██║   ██║██║   ██║   ██║   ██╔══██╗██╔══╝  ██╔═══╝ 
  ██████╔╝╚██████╔╝╚██████╔╝   ██║   ██║  ██║███████╗██║     
  ╚═════╝  ╚═════╝  ╚═════╝    ╚═╝   ╚═╝  ╚═╝╚══════╝╚═╝     
"
# <=============================================================>
separator="<=============================================================>"
# <=============================================================>
color_off='\033[0m'
color_black='\033[1;30m'
color_red='\033[1;31m'
color_green='\033[1;32m'
color_yellow='\033[1;33m'
color_blue='\033[1;34m'
color_purple='\033[1;35m'
color_cyan='\033[1;36m'
color_white='\033[1;37m'
# <=============================================================>
#  [Functions] Input & Output:
# <=============================================================>
# Get some input in a formatted way
# <=============================================================>
input () {
	local color="color_$3"
	echo -ne "${!color}${2}"
	read "$1"
	[[ "${4}" != "!" ]] && output $separator cyan !
	return 0
}
# <====================================================>
# Display some formatted output
# <====================================================>
output () {
	local color="color_$2"
	echo -e "${!color}${1}${color_off}"
	[[ "${3}" != "!" ]] && output $separator cyan !
	return 0
}
# <=============================================================>
#  [Sequential] Bootrep body:
# <=============================================================>
output "" off
output "$title" purple
# <=============================================================>
output "> Startup times:" purple
output "$(systemd-analyze)" blue
# <=============================================================>
output "> Startup longest services:" purple
output "$(systemd-analyze blame | head -n 5)" blue
# <=============================================================>
output "> Failed systemd units:" purple
output "$(systemctl --failed)" blue
# <=============================================================>
output "> Xorg-server errors & warnings:" purple
output "$(grep -F -e '(EE)' -Fe '(WW)' /var/log/Xorg.0.log)" blue
# <=============================================================>
output "> Video acceleration status:" purple
output "$(grep -iE 'vdpau | dri driver | va-api' /var/log/Xorg.0.log)" blue
# <=============================================================>
output "> Current time status:" purple
output "$(timedatectl status)" blue
# <=============================================================>
output "> Current DNS status:" purple
output "$(resolvectl status)" blue
# <=============================================================>
output "> Current Microcode status:" purple
output "$(journalctl -k --grep='microcode:')" blue
# <=============================================================>
#journalctl -b -p err..alert
# <=============================================================>
#output "" off
# <=============================================================>